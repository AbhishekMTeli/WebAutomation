<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="31" hostname="GGIPLs-MacBook-Pro-217.local" failures="1" tests="1" name="Default test" time="189.639" errors="0" timestamp="2025-10-07T18:26:20 IST">
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateTrainerSeesPendingGradingActionAfterTraineeMarksForReview" time="175.962">
    <failure type="java.lang.AssertionError" message="Text Mismatch: expected &amp;apos;General Info has been updated.&amp;apos; but got &amp;apos;Please enter duration.&amp;apos; expected [General Info has been updated.] but found [Please enter duration.]">
      <![CDATA[java.lang.AssertionError: Text Mismatch: expected 'General Info has been updated.' but got 'Please enter duration.' expected [General Info has been updated.] but found [Please enter duration.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at tests.CommandUpGradeSLFTest.validateTrainerSeesPendingGradingActionAfterTraineeMarksForReview(CommandUpGradeSLFTest.java:1110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- validateTrainerSeesPendingGradingActionAfterTraineeMarksForReview -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenSwitchingFromGradingToOutcomeWithoutSaving" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenSwitchingFromGradingToOutcomeWithoutSaving -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="verifyDeleteFunctionalityForMultipleSectors" time="0.0">
    <ignored/>
  </testcase> <!-- verifyDeleteFunctionalityForMultipleSectors -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateTrainerCanAccessSubmittedFormThroughGradingHistory" time="0.0">
    <ignored/>
  </testcase> <!-- validateTrainerCanAccessSubmittedFormThroughGradingHistory -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="e2eHappyPathTestForCommandUpgradeSLF" time="0.0">
    <ignored/>
  </testcase> <!-- e2eHappyPathTestForCommandUpgradeSLF -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldAllowManualSelectionOfCompetentOrNotYetCompetentForValue2" time="0.0">
    <ignored/>
  </testcase> <!-- shouldAllowManualSelectionOfCompetentOrNotYetCompetentForValue2 -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenDurationFieldIsEmpty" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenDurationFieldIsEmpty -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldAllowNavigationFromSectorsToSyllabusAfterFillingData" time="0.0">
    <ignored/>
  </testcase> <!-- shouldAllowNavigationFromSectorsToSyllabusAfterFillingData -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateDataSubmissionPopup" time="0.0">
    <ignored/>
  </testcase> <!-- validateDataSubmissionPopup -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldNotDeleteOnlyRowInSectorDetails" time="0.0">
    <ignored/>
  </testcase> <!-- shouldNotDeleteOnlyRowInSectorDetails -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorWhenAddingCommentsWithoutSelectingOBs" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorWhenAddingCommentsWithoutSelectingOBs -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenNavigatingFromManageSectorsToSyllabusWithoutCompletingFields" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenNavigatingFromManageSectorsToSyllabusWithoutCompletingFields -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldAutoSelectNotYetCompetentForValue1AndHandleOBs" time="0.0">
    <ignored/>
  </testcase> <!-- shouldAutoSelectNotYetCompetentForValue1AndHandleOBs -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenFromFieldIsEmptyOnSave" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenFromFieldIsEmptyOnSave -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenAircraftTypeFieldIsEmptyOnSave" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenAircraftTypeFieldIsEmptyOnSave -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateCommentRequirementAndRadioSelectionAcrossAllSections" time="0.0">
    <ignored/>
  </testcase> <!-- validateCommentRequirementAndRadioSelectionAcrossAllSections -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenRegNoFieldIsEmptyOnSave" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenRegNoFieldIsEmptyOnSave -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowPopupWhenSyllabusToggleIsDefaultOnNext" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowPopupWhenSyllabusToggleIsDefaultOnNext -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldNotAllowFormSubmissionWhenTotalSectorsExceedsFifteen" time="0.0">
    <ignored/>
  </testcase> <!-- shouldNotAllowFormSubmissionWhenTotalSectorsExceedsFifteen -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateSignCanvas" time="0.0">
    <ignored/>
  </testcase> <!-- validateSignCanvas -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenPMorPFNotSelectedOnSave" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenPMorPFNotSelectedOnSave -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validatePleaseEnterDuration" time="0.0">
    <ignored/>
  </testcase> <!-- validatePleaseEnterDuration -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowDeletePopupForMultipleSectors" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowDeletePopupForMultipleSectors -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateErrorWhenNoCompetentSelectionAfterAddingOBs" time="0.0">
    <ignored/>
  </testcase> <!-- validateErrorWhenNoCompetentSelectionAfterAddingOBs -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateMandatoryOverallCommentsForNotYetCompetent" time="0.0">
    <ignored/>
  </testcase> <!-- validateMandatoryOverallCommentsForNotYetCompetent -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorPopupWhenToFieldIsEmptyOnSave" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorPopupWhenToFieldIsEmptyOnSave -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateTraineeCanAcknowledgeSubmittedForm" time="0.0">
    <ignored/>
  </testcase> <!-- validateTraineeCanAcknowledgeSubmittedForm -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateTraineeCanMarkFormForReview" time="0.0">
    <ignored/>
  </testcase> <!-- validateTraineeCanMarkFormForReview -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldShowErrorWhenDelayCommentIsEmpty" time="0.0">
    <ignored/>
  </testcase> <!-- shouldShowErrorWhenDelayCommentIsEmpty -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldCloseDelayCommentPopupUsingCloseButtonAndXIcon" time="0.0">
    <ignored/>
  </testcase> <!-- shouldCloseDelayCommentPopupUsingCloseButtonAndXIcon -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="shouldAutoSelectCompetentAndDisableNotYetCompetent" time="0.0">
    <ignored/>
  </testcase> <!-- shouldAutoSelectCompetentAndDisableNotYetCompetent -->
  <testcase classname="tests.CommandUpGradeSLFTest" name="validateMandatoryQualificationDropdown" time="0.0">
    <ignored/>
  </testcase> <!-- validateMandatoryQualificationDropdown -->
</testsuite> <!-- Default test -->
