package tests;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import adminPages.AdminDashBoardPage;
import adminPages.BecomeUserPage;
import adminPages.EFormReportsPage;
import adminPages.TrainingManagerReviewPage;
import adminPages.UserDocsPage;
import base.BaseClass;
import ca4041Pages.CA4041GeneralInfoGradingPage;
import ca4041Pages.CA4041OverallOutComePage;
import ca4041Pages.CA4041TaskGradePage;
import ca4041Pages.GradingTraineeListPage;
import commonPages.GradingHistoryPage;
import commonPages.LogoutPage;
import commonPages.PendingHistoryPage;
import commonPages.PopupPage;
import commonPages.TraineeGradingPage;
import commonPages.TrainerDashBoradPage;
import rhsPages.RHSCheckPage;
import rhsPages.RHSGradingPage;
import rhsPages.RHSTrainingPage;
import traineePages.TraineeReviewPage;
import utils.SeleniumUtils;

public class CA40Test extends BaseClass {
	private GradingTraineeListPage gradingTraineeListPage;
	private TrainerDashBoradPage trainerDashBoradPage;
	private TraineeGradingPage traineeGradingPage;
	private CA4041GeneralInfoGradingPage cA4041GeneralInfoGradingPage;
	private CA4041TaskGradePage cA4041TaskGradePage;
	private CA4041OverallOutComePage cA4041OverallOutComePage;
	private RHSGradingPage rHSGradingPage;
	private RHSTrainingPage rHSTrainingPage;
	private PopupPage popupPage;
	private String designation;
	private RHSCheckPage rHSCheckPage;
	private String traineeIdWithName;
	private String traineeId;
	private GradingHistoryPage gradingHistoryPage;
	private LogoutPage logoutPage;
	private TraineeReviewPage traineeReviewPage;
	private PendingHistoryPage pendingHistoryPage;
	private TrainingManagerReviewPage trainingManagerReviewPage;
	private UserDocsPage userDocsPage;
	private EFormReportsPage eFormReportsPage;

	@BeforeMethod(alwaysRun = true)
	public void initPages() {
		adminDashBoardPage = new AdminDashBoardPage(getDriver());
		becomeUserPage = new BecomeUserPage(getDriver());
		gradingTraineeListPage = new GradingTraineeListPage(getDriver());
		trainerDashBoradPage = new TrainerDashBoradPage(getDriver());
		traineeGradingPage = new TraineeGradingPage(getDriver());
		cA4041GeneralInfoGradingPage = new CA4041GeneralInfoGradingPage(getDriver());
		cA4041TaskGradePage = new CA4041TaskGradePage(getDriver());
		cA4041OverallOutComePage = new CA4041OverallOutComePage(getDriver());
		rHSGradingPage = new RHSGradingPage(getDriver());
		popupPage = new PopupPage(getDriver());
		rHSTrainingPage = new RHSTrainingPage(getDriver());
		rHSCheckPage = new RHSCheckPage(getDriver());
		gradingHistoryPage = new GradingHistoryPage(getDriver());
		logoutPage = new LogoutPage(getDriver());
		traineeReviewPage = new TraineeReviewPage(getDriver());
		pendingHistoryPage = new PendingHistoryPage(getDriver());
		trainingManagerReviewPage = new TrainingManagerReviewPage(getDriver());
		userDocsPage = new UserDocsPage(getDriver());
		eFormReportsPage = new EFormReportsPage(getDriver());
	}

	@Test(description = "CA 40//41 Form e2e Happy Path test case")
	public void happyPathCA4041Test() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
//		cA4041TaskGradePage.selectGarde("PRO", "3");
//		cA4041TaskGradePage.clickAllMinusButtons("PRO");
//		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
//		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
	}

	@Test(description = "")
	public void verifyPleaseSelectSimulatorTypePopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please select simulator type.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseEnterRegistrationNumberPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("");
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please enter Registration number.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseSelectTypeOfCheckPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("Test User");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please select seat occupied.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseSelectSeatOccupiedPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("Test User");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("RHS");
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please select type of check.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseSelectDayOrNightPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("Test User");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("RHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please select day/night.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseSelectCrewStatusPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("Test User");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("RHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.clickNextButton();
		String expectedResult = "Please select crew status.";
		String actualResult = popupPage.alertGetText();
		Assert.assertEquals(expectedResult, actualResult,
				"Alert mismatch expected : " + expectedResult + " but got : " + actualResult);
	}

	@Test(description = "")
	public void verifyPleaseSelectTheGradeValuePopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("Test User");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("RHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee PIC");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickSaveButton();
		String expectedResult = "Please Select the Grade Value";
		String actualResult = popupPage.alertNewGetText();
		Assert.assertTrue(actualResult.contains(expectedResult),
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "directly switching from the General Info tab to Task Grades")
	public void verifyYouMustSelectSeatOccupiedPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.clickTaskGradesTab();
		String expectedResult = "You must select SEAT OCCUPIED";
		String actualResult = popupPage.popupGetText();
		Assert.assertTrue(actualResult.contains(expectedResult),
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "Popup message upon selecting 3 NO")
	public void verifyYouHaveSelectedNoPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllNoButtons();
		String expectedResult = "You have selected No for the following";
		String actualResult = popupPage.modalBodyGetText();
		Assert.assertTrue(actualResult.contains(expectedResult),
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
		popupPage.clickModalBodyYesButton();
	}

	@Test(description = "Popup message upon selecting 3 NO")
	public void verifyPleaseEnterQualificationPopupMessage() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.clickSaveAndNextButton();

		String expectedResult = "OK Please select qualification.";
		String actualResult = popupPage.popupGetText();
		Assert.assertEquals(actualResult, expectedResult,
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "CA 40//41 Form e2e Happy Path test case")
	public void selectingOBGradeASThreeCheckTraineeAutoPass() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
	}

	@Test(description = "")
	public void selectingOBGradeASOneCheckTraineeAutoFail() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "1");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedFailRadioButton();
	}

	@Test(description = "You must enter the remarks")
	public void verifyYouMustEnterRemarkPopup() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "1");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedFailRadioButton();
		cA4041OverallOutComePage.addRemark("");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		String expectedResult = "OK You must enter the remarks";
		String actualResult = popupPage.popupGetText();
		Assert.assertEquals(actualResult, expectedResult,
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "delay comment")
	public void verifyEnterDelayCommentRemarkPopup() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		String expectedResult = "Please enter a comment before submitting.";
		String actualResult = SeleniumUtils.getAlertText(getDriver());
		Assert.assertEquals(actualResult, expectedResult,
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "")
	public void verifyPeaseProvideASignatureFirstRemarkPopup() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		String expectedResult = "Please provide a signature first.";
		String actualResult = SeleniumUtils.getAlertText(getDriver());
		Assert.assertEquals(actualResult, expectedResult,
				"Alert mismatch: expected text to contain '" + expectedResult + "' but got: '" + actualResult + "'");
	}

	@Test(description = "Validate trainer can access submitted form through Grading History")
	public void validateTrainerCanAccessSubmittedFormThroughGradingHistory() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		gradingHistoryPage.clickGradingHistoryButton();
		gradingHistoryPage.validateAllStaticTexts();
		gradingHistoryPage.enterLessonName(traineeId);
		gradingHistoryPage.clickViewButton();
		gradingHistoryPage.validatePreviewHeader();
		gradingHistoryPage.clickCloseButton();
		gradingHistoryPage.clickViewButton();
		gradingHistoryPage.clickCloseIcon();
	}

	@Test(description = "Validate trainee can acknowledge the submitted form")
	public void validateTraineeCanAcknowledgeSubmittedForm() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
	}

	@Test(description = "Validate trainee can mark the submitted form for review")
	public void validateTraineeCanMarkFormForReview() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickMarkForReviewButton();
		String actualText = traineeReviewPage.getMarkForReviewConfirmationText();
		String expectedText = "Are you sure you want to mark this event for review by trainer ?";
		Assert.assertEquals(actualText, expectedText,
				"Text missmatch" + expectedText + "is expected but found " + actualText);
		traineeReviewPage.clickNoButton();
		traineeReviewPage.clickMarkForReviewButton();
		traineeReviewPage.clickYesButton();
		traineeReviewPage.validateAllStaticElements();
	}

	@Test(description = "Validate trainer can see action under pending grading after trainee marks form for review")
	public void validateTrainerSeesPendingGradingActionAfterTraineeMarksForReview() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickMarkForReviewButton();
		String actualText = traineeReviewPage.getMarkForReviewConfirmationText();
		String expectedText = "Are you sure you want to mark this event for review by trainer ?";
		Assert.assertEquals(actualText, expectedText,
				"Text Mismatch" + expectedText + "is expected but found " + actualText);
		traineeReviewPage.clickNoButton();
		traineeReviewPage.clickMarkForReviewButton();
		traineeReviewPage.clickYesButton();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		// 29239
		pendingHistoryPage.validatePengingGradingStaticTexts();
		pendingHistoryPage.enterSearchText(traineeId);
		pendingHistoryPage.clickReviewButton();
		rHSGradingPage.clickNextButton();
		rHSGradingPage.clickModelBodyYesButton();
	}

	@Test(description = "Validate trainee cannot mark the form for review after it has been reviewed and submitted by trainer")
	public void validateTraineeCannotMarkFormForReviewAfterTrainerSubmission() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickMarkForReviewButton();
		String actualText = traineeReviewPage.getMarkForReviewConfirmationText();
		String expectedText = "Are you sure you want to mark this event for review by trainer ?";
		Assert.assertEquals(actualText, expectedText,
				"Text Mismatch" + expectedText + "is expected but found " + actualText);
		traineeReviewPage.clickNoButton();
		traineeReviewPage.clickMarkForReviewButton();
		traineeReviewPage.clickYesButton();
		traineeReviewPage.validateAllStaticElements();

		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		pendingHistoryPage.validatePengingGradingStaticTexts();
		pendingHistoryPage.enterSearchText(traineeId);
		pendingHistoryPage.clickReviewButton();
		rHSGradingPage.clickNextButton();
		rHSGradingPage.clickModelBodyYesButton();
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.enterTrainId(becomeUserPage.getTraineeId());
		traineeReviewPage.clickViewButton();
		traineeReviewPage.markForReviewButtonNotVisible();
		traineeReviewPage.clickAcknowledgeButton();
	}

	@Test(description = "Validate admin can approve the form after trainee acknowledgement")
	public void validateAdminCanApproveFormAfterTraineeAcknowledgement() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("adding comments");
		trainingManagerReviewPage.clickApproveButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToApprove();
		trainingManagerReviewPage.clickYesButtonForApprove();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Approved successfully";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
	}

	@Test(description = "Validate admin cannot mark for review without adding comments")
	public void validateAdminCannotMarkForReviewWithoutComments() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.clickMarkForReviewButton();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Please enter comments.";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
	}

	@Test(description = "Validate admin can mark for review with adding comments")
	public void validateAdminCanMarkForReviewWithComments() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("entering review comments");
		trainingManagerReviewPage.clickMarkForReviewButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToMarkForReview();
		trainingManagerReviewPage.clickYesButtonForReview();
		String actualText = popupPage.alertGetText();
		String expectedText = "The training event has been marked for review.";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
	}

	@Test(description = "Validate \"Mark for Review\" button absence after trainer form submission")
	public void validateMarkForReviewButtonAbsentAfterTrainerSubmission() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		boolean isAbsent = trainingManagerReviewPage.isMarkForReviewButtonAbsent();
		Assert.assertTrue(isAbsent, "Mark for Review button should be absent after trainer form submission");
	}

	@Test(description = "Validate approved form is visible under Approved Docs and can be viewed via Training Records Approval page")
	public void validateApprovedFormVisibleUnderApprovedDocs() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("adding comments");
		trainingManagerReviewPage.clickApproveButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToApprove();
		trainingManagerReviewPage.clickYesButtonForApprove();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Approved successfully";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
		userDocsPage.clickUserDocsTab();
		userDocsPage.clickApprovedDocsTab();
		userDocsPage.validateAllTexts();
		userDocsPage.clickEyeIcon();
		userDocsPage.clickCloseIcon();
		userDocsPage.clickEyeIcon();
		userDocsPage.clickUploadedDocumentLink();
	}

	@Test(description = "Validate approved form report is visible under E-Form Reports")
	public void validateApprovedFormReportVisibleUnderEFormReports() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("adding comments");
		trainingManagerReviewPage.clickApproveButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToApprove();
		trainingManagerReviewPage.clickYesButtonForApprove();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Approved successfully";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
		adminDashBoardPage.clickReportsTab();
		adminDashBoardPage.clickEformReportsSubTab();
		eFormReportsPage.validateAllStaticElements();
	}

	@Test(description = "Validate reports can be downloaded as a .zip file when multiple checkboxes are selected")
	public void validateReportsDownloadAsZipWhenMultipleCheckboxesSelected() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("adding comments");
		trainingManagerReviewPage.clickApproveButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToApprove();
		trainingManagerReviewPage.clickYesButtonForApprove();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Approved successfully";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
		adminDashBoardPage.clickReportsTab();
		adminDashBoardPage.clickEformReportsSubTab();
		eFormReportsPage.validateAllStaticElements();
		eFormReportsPage.clickCheckBoxesButton();
		eFormReportsPage.clickDownloadButtton();
	}

	@Test(description = "Validate reports can be downloaded as a .zip file when a single checkbox is selected")
	public void validateReportDownloadAsZipWhenSingleCheckboxSelected() throws InterruptedException {
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendUserId();
		becomeUserPage.clickOnBecomeUser();
		trainerDashBoradPage.clickOnGradingAssessmentTab();
		trainerDashBoradPage.clickOnGradingSubTab();
		traineeGradingPage.validateAllStaticTexts();
		traineeGradingPage.clickOnGradeButtonWithRetries(10);
		gradingTraineeListPage.validateTableHeadersForGradingTraineeListPage();
		gradingTraineeListPage.clickOnFirstGradeButton();
		cA4041GeneralInfoGradingPage.validateGeneralInfoLabels();
		designation = cA4041GeneralInfoGradingPage.getDesignation();
		cA4041GeneralInfoGradingPage.enterRegistrationNumber("TESTUSER");
		traineeIdWithName = cA4041GeneralInfoGradingPage.getTrainerId();
		System.out.println("Trainee Name and Id is " + traineeIdWithName);
		traineeId = traineeIdWithName.replaceAll(".*\\((\\d+)\\).*", "$1");
		cA4041GeneralInfoGradingPage.selectLocationDropDown("BLR");
		cA4041GeneralInfoGradingPage.selectSimulatorLevelDropDown("FFS Level D");
		cA4041GeneralInfoGradingPage.selectSeatOccupiedDropDown("LHS");
		cA4041GeneralInfoGradingPage.selectTypeOfCheckDropDown("IR");
		cA4041GeneralInfoGradingPage.clickDayIconButton();
		cA4041GeneralInfoGradingPage.selectCrewStatusDropDown("Trainee Co-Pilot");
		cA4041GeneralInfoGradingPage.clickNextButton();
		cA4041TaskGradePage.clickFlightPreparationPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.selectGarde("PRO", "3");
		cA4041TaskGradePage.clickAllMinusButtons("PRO");
		cA4041TaskGradePage.enterObComment("entering OB Comment", "PRO");
		cA4041TaskGradePage.clickObDoneButton("PRO");
		cA4041TaskGradePage.clickTakeOffPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickFlightmanoeuresAndProcedurePanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickNormalAndAbnormalEmergencyProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMIRILS_ApprochesPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickMissedApproacheProceduresPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLandingPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickLowVisibilityOperationsPanel();
		cA4041TaskGradePage.clickAllYesButtons();
		cA4041TaskGradePage.clickSaveButton();
		cA4041TaskGradePage.clickWishToMaintainDefaultGradingPopupYesButton();
		cA4041OverallOutComePage.isSelectedPassRadioButton();
		cA4041OverallOutComePage.addRemark("adding remarks");
		cA4041OverallOutComePage.selectQualification("DE");
		cA4041OverallOutComePage.clickSaveAndNextButton();
		cA4041OverallOutComePage.reasonForDelayLabelIsPresent();
		cA4041OverallOutComePage.addDelayComments("adding delay comments");
		cA4041OverallOutComePage.clickSubmitCommentButtonForDelayComment();
		cA4041OverallOutComePage.visibilityOfPreviewHeader();
		cA4041OverallOutComePage.clickPreviewNextButton();
		cA4041OverallOutComePage.instructorAcknowldgementLabelIsPresent();
		cA4041OverallOutComePage.clickSubmitButtonForInstructorAcknowldgement();
		cA4041OverallOutComePage.digitalSignitureLabelIsPresent();
		cA4041OverallOutComePage.digitalSign();
		cA4041OverallOutComePage.clickSaveSignitureButtonForDigitalSigniture();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		cA4041OverallOutComePage.dataSuccessfullyUploadedIsPresent();
		cA4041OverallOutComePage.clickOkPop_up();
		rHSGradingPage.handelAlert();
		rHSGradingPage.handelAlert();
		System.out.println(designation);
		if (designation.equals("Designation - Captain")) {
			rHSGradingPage.validateAllTextForRHSGradingPage();
			rHSGradingPage.enterRegistrationNumber("TestUser");
			rHSGradingPage.selectLocationDropDown("BLR");
			rHSGradingPage.clickRhsCheckCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickRhsTrainingCheckBox();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSGradingPage.clickNextButton();
			SeleniumUtils.acceptAlert(getDriver(), 5);
			rHSTrainingPage.validateRhsTrainingOverallGrade();
			rHSTrainingPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSTrainingPage.clickObDoneButton("PRO");
			rHSTrainingPage.selectTrainingQualification("SFI");
			rHSTrainingPage.clickSaveAndNextButton();
			rHSCheckPage.validateRhsCheckOverallGrade();
			rHSCheckPage.performObAction("PRO", 3, "plus", "adding OB Comment");
			rHSCheckPage.clickObDoneButton("PRO");
			rHSCheckPage.selectCheckQualification("SFE");
			rHSCheckPage.clickSaveAndNextButton();
			rHSCheckPage.reasonForDelayLabelIsPresent();
			rHSCheckPage.addDelayComments("adding dealy comments");
			rHSCheckPage.clickSubmitCommentButtonForDelayComment();
			rHSCheckPage.instructorAcknowldgementLabelIsPresent();
			rHSCheckPage.clickSubmitButtonForInstructorAcknowldgement();
			rHSCheckPage.digitalSignitureLabelIsPresent();
			rHSCheckPage.digitalSign();
			rHSCheckPage.clickSaveSignitureButtonForDigitalSigniture();
			rHSCheckPage.dataSuccessfullyUploadedIsPresent();
			rHSCheckPage.clickOkPop_up();
		}
		traineeGradingPage.validateAllStaticTexts();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickBecomeUserTab();
		becomeUserPage.sendTraineeId(traineeId);
		becomeUserPage.clickOnBecomeUser();
		traineeReviewPage.clickGradingAndAssessmentTab();
		traineeReviewPage.clickTraineeReviewTab();
		traineeReviewPage.validateAllStaticElements();
		traineeReviewPage.clickViewButton();
		traineeReviewPage.clickAcknowledgeButton();
		traineeReviewPage.clickSubmitButtonForInstructorAcknowldgement();
		traineeReviewPage.digitalSignitureLabelIsPresent();
		traineeReviewPage.digitalSign();
		traineeReviewPage.clickSaveSignitureButtonForDigitalSigniture();
		traineeReviewPage.clickOkPop_up();
		traineeReviewPage.validateAllStaticElements();
		logoutPage.clickProfileIcon();
		logoutPage.clickLogoutButton();
		adminDashBoardPage.clickGradingAndAssessmentTab();
		adminDashBoardPage.clickTrainingManagerReviewSubTab();
		trainingManagerReviewPage.validateAllTableHeaders();
		trainingManagerReviewPage.presenceOfViewButton();
		trainingManagerReviewPage.searchforTrainee(traineeId);
		trainingManagerReviewPage.clickViewButton();
		trainingManagerReviewPage.enterComment("adding comments");
		trainingManagerReviewPage.clickApproveButton();
		trainingManagerReviewPage.validateTextAreSureYouWantToApprove();
		trainingManagerReviewPage.clickYesButtonForApprove();
		String actualText = trainingManagerReviewPage.getTextOfPopup();
		String expectedText = "OK Approved successfully";
		Assert.assertEquals(actualText, expectedText,
				"Text mismatch : expected " + expectedText + " but got " + actualText);
		trainingManagerReviewPage.clickOkPopupButton();
		adminDashBoardPage.clickReportsTab();
		adminDashBoardPage.clickEformReportsSubTab();
		eFormReportsPage.validateAllStaticElements();
		eFormReportsPage.searchForTrainee(traineeId);
		eFormReportsPage.clickCheckBoxesButton();
		eFormReportsPage.clickDownloadButtton();
	}
}